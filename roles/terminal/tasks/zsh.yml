---
- name: Make zsh my default shell
  user:
    name: "{{ primary_user }}"
    shell: /usr/bin/zsh

- name: Check oh-my-zsh exists
  stat:
    path: "/home/{{ primary_user }}/.oh-my-zsh"
  register: omz

- name: Run the Oh-My-Zsh installer
  become_user: "{{ primary_user }}"
  shell: sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  when: not omz.stat.exists

- name: Copy my theme
  template:
    src: gazay.zsh-theme
    dest: "/home/{{ primary_user }}/.oh-my-zsh/themes/gazay.zsh-theme"
    owner: "{{ primary_user }}"
    group: "{{ primary_user_group }}"

- name: Check my zsh config exists
  stat:
    path: "/home/{{ primary_user }}/.zshrc"
  register: zrc

- name: Create zsh config
  template:
    src: zshrc
    dest: "/home/{{ primary_user }}/.zshrc"
    owner: "{{ primary_user }}"
    group: "{{ primary_user_group }}"
  when: not zrc.stat.exists

- name: Check my editorconfig exists
  stat:
    path: "/home/{{ primary_user }}/.editorconfig"
  register: ecfg

- name: Create editorconfig
  template:
    src: editorconfig
    dest: "/home/{{ primary_user }}/.editorconfig"
    owner: "{{ primary_user }}"
    group: "{{ primary_user_group }}"
  when: not ecfg.stat.exists

- name: Check my gitconfig exists
  stat:
    path: "/home/{{ primary_user }}/.gitconfig"
  register: gcfg

- name: Create gitconfig
  template:
    src: gitconfig
    dest: "/home/{{ primary_user }}/.gitconfig"
    owner: "{{ primary_user }}"
    group: "{{ primary_user_group }}"
  when: not gcfg.stat.exists

- name: Check my gitignore exists
  stat:
    path: "/home/{{ primary_user }}/.gitconfig"
  register: gign

- name: Create gitignore
  template:
    src: gitignore
    dest: "/home/{{ primary_user }}/.gitignore"
    owner: "{{ primary_user }}"
    group: "{{ primary_user_group }}"
  when: not gign.stat.exists
